/*
 * taskDetailsPanel.java
 *
 * Created on Nov 26, 2011, 12:05:15 PM
 */
package taskdirector.ui.panels;

import java.awt.event.ActionListener;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import taskdirector.events.listeners.ITaskDetailsPanelClosePressedListener;
import taskdirector.events.listeners.ITaskDetailsSaveListener;
import taskdirector.services.viewmodels.TaskDetailsViewModel;

/**
 *
 * @author KallDrexx
 */
public class TaskDetailsPanel extends javax.swing.JPanel {

    /** Creates new form taskDetailsPanel */
    public TaskDetailsPanel(TaskDetailsViewModel task) {
        initComponents();
        
        taskId = task.getId();
        taskNameTextbox.setText(task.getName());
        dueDateChooser.setDate(task.getDueDate());
        percentCompleteSpinner.setValue(task.getPercentCompleted() * 100);
        notesTextPanel.setText(task.getNotes());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        taskNameTextbox = new javax.swing.JTextField();
        dueDateChooser = new com.toedter.calendar.JDateChooser();
        percentCompleteSpinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesTextPanel = new javax.swing.JTextPane();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setText("Name:");

        jLabel2.setText("Due Date:");

        jLabel3.setText("Percent Completed:");

        jLabel4.setText("Notes:");

        percentCompleteSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jScrollPane1.setViewportView(notesTextPanel);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(percentCompleteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dueDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(taskNameTextbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(taskNameTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(dueDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(percentCompleteSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        final String msg = "Closing this screen will cause you to lose unsaved changes.  Continue?";
        final String title  = "Close Without Saving?";

        Object[] options = {"Yes", "No"};
        int response = JOptionPane.showOptionDialog(this,
            msg,
            title,
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE,
            null,     //do not use a custom Icon
            options,  //the titles of buttons
            options[1]); //default button title

        if (response != JOptionPane.YES_OPTION)
            return;
        
        if (closePanelListener != null)
            closePanelListener.CloseTaskDetailsPane(taskId);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (saveTaskDetailsListener != null)
        {
            Double percentage = Double.parseDouble(percentCompleteSpinner.getValue().toString()) / 100;
            
            TaskDetailsViewModel taskVm = new TaskDetailsViewModel();
            taskVm.setId(taskId);
            taskVm.setName(taskNameTextbox.getText());
            taskVm.setDueDate(dueDateChooser.getDate());
            taskVm.setPercentCompleted(percentage);
            taskVm.setNotes(notesTextPanel.getText());
            
            saveTaskDetailsListener.SaveTaskDetails(taskVm);
            
            if (closePanelListener != null)
                closePanelListener.CloseTaskDetailsPane(taskId);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private com.toedter.calendar.JDateChooser dueDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane notesTextPanel;
    private javax.swing.JSpinner percentCompleteSpinner;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField taskNameTextbox;
    // End of variables declaration//GEN-END:variables

    // Custom variables and properties
    private UUID taskId;
    private ITaskDetailsPanelClosePressedListener closePanelListener;
    private ITaskDetailsSaveListener saveTaskDetailsListener;
    
    public UUID getTaskId()
    {
        return taskId;
    }
    
    public void addTaskDetailsPanelClosePressedListener(ITaskDetailsPanelClosePressedListener listener)
    {
        closePanelListener = listener;
    }
    
    public void addTaskDetailsSaveListener(ITaskDetailsSaveListener listener)
    {
        saveTaskDetailsListener = listener;
    }
}